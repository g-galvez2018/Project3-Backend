{"version":3,"sources":["components/user-pages/Signup.js","components/user-pages/Login.js","components/Home.js","components/form-pages/Dropdown-Resource.js","components/form-pages/Dropdown-Client.js","components/tech-pages/AddTicket.js","components/client-pages/Add-Client.js","components/client-pages/Client-List.js","components/client-pages/Edit-Client.js","components/admin-pages/User-List.js","components/admin-pages/Edit-User.js","components/site-pages/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Signup","state","fullName","email","originalPassword","message","event","_event$target","target","name","value","this","setState","Object","defineProperty","_this2","preventDefault","axios","post","concat","process","withCredentials","then","responseFromServer","userDoc","data","props","onUserChange","catch","err","response","_this3","currentUser","react_default","a","createElement","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","Component","Login","console","log","react_router","to","Home","DropdownResource","technicians","singleTech","get","techs","e","sendUser","pickupUser","map","user","key","_id","DropdownClient","clients","singleClient","client","accountName","AddTicket","contact","status","priority","issueType","primaryResource","ticketTitle","ticketDescription","isSubmitSuccessful","technician","Dropdown_Client","getClient","Dropdown_Resource","getTech","rows","AddClient","address1","Phone","active","toggleChange","_this","checked","ClientList","clientArray","alert","length","scope","oneClient","react_router_dom","EditClient","params","match","clientId","put","UserList","userArray","oneUser","EditUser","role","userId","Navbar","delete","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","userName","onClick","logoutClick","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","responseFromBackend","syncCurrentUser","site_pages_Navbar","exact","path","component","render","user_pages_Signup","user_pages_Login","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8838f35a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  state = {\n     fullName: \"\",\n     email: \"\",\n     originalPassword: \"\",\n     message: null\n  }; \n  genericSync(event){\n    const { name, value } = event.target;\n    this.setState({ [name]:value });\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    axios.post(\n        `${process.env.REACT_APP_API_URL}/api/signup`, // 1st and mandatory: which route I'm hitting in the backend\n        this.state, // 2nd and mandatory: what I'm sending (since it's POST route I have to send something)\n        { withCredentials:true } // 3rd and optional: credentials:true in CORS\n    )\n    .then( responseFromServer => {\n         //console.log(\"response is: \", responseFromServer);\n        const { userDoc } = responseFromServer.data;\n        this.props.onUserChange(userDoc);\n    } )\n    .catch(err => {\n        // console.log(\"error while signup: \", err);\n        if(err.response && err.response.data){\n            return this.setState({ message:err.response.data.message });\n        }\n    })    \n  }\n  render () {    \n    if(this.props.currentUser){\n        return(\n            <section>\n                <h2> You are signed up! </h2>\n                <p> Welcome, { this.props.currentUser.fullName }! \n                    Your email is: <b> { this.props.currentUser.email } </b>\n                </p>\n            </section>\n        )\n   }  \n\n  return (\n    <div className=\"row\">\n        <div className=\"col-md-6 mx-auto \">\n            <div className=\"card rounded-0\">\n                <div className=\"card-header\">\n                    <h3 className=\"mb-0 my-2\">Create Account</h3>\n                </div>\n                <div className=\"card-body\">       \n                    <form onSubmit={ event => this.handleSubmit(event) } >\n                       <div className=\"form-group\">\n                            <label> Full Name </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.fullName }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"text\"\n                                name=\"fullName\"\n                                placeholder=\"Full Name\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label> Email </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.email }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Email Address\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label> Password </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.originalPassword }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"password\"\n                                name=\"originalPassword\"\n                                placeholder=\"*******\"\n                            />\n                        </div>\n                        \n                        <button className=\"btn btn-secondary btn-lg btn-block\"> Sign Up </button>\n                    </form>\n                    {/* if the message is not NULL then show the message */}\n                    { this.state.message && <div> { this.state.message } </div> }\n                </div>\n            </div>\n        </div>\n     </div>\n   \n    )\n  }\n}\n\nexport default Signup;\n\n\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Login extends Component {\n   \n    state = {\n        email: \"\",\n        originalPassword: \"\",\n        message: null,\n    }\n    \n    genericSync(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        axios.post(\n            `${process.env.REACT_APP_API_URL}/api/login`,\n            this.state,\n            { withCredentials: true }, // FORCE axios to send cookies across domains\n        )\n        .then(response => {\n            console.log(\"Login Page\", response.data);            \n            const { userDoc } = response.data;\n            // send \"userDoc\" to the App.js function that changes \"currentUser\"\n            this.props.onUserChange(userDoc);\n            console.log('success')\n        })\n        .catch(err => {\n            if (err.response && err.response.data) {\n              // console.error(\"API response\", err.response.data)\n              return  this.setState({ message: err.response.data.message }) \n            }\n        });\n    }\n\n\n\n    render(){\n        // check if currentUser exists and if so, redirect to some other page\n        if(this.props.currentUser){\n            return <Redirect to=\"/\" />\n        }\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-6 mx-auto\">\n                    <div className=\"card rounded-0\">\n                        <div className=\"card-header\">\n                            <h3 className=\"mb-0 my-2\">Sign in</h3>\n                        </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={event => this.handleSubmit(event)}>\n                            <div className=\"form-group\">\n                                <label> Email:  </label>\n                                <input \n                                    className=\"form-control\"\n                                    value={this.state.email}\n                                    onChange={event => this.genericSync(event)}\n                                    type=\"email\" \n                                    name=\"email\" \n                                    placeholder=\"Email address\" \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password:</label>\n                                <input \n                                    className=\"form-control\"\n                                    value={this.state.originalPassword}\n                                    onChange={event => this.genericSync(event)}\n                                    type=\"password\" \n                                    name=\"originalPassword\" \n                                    placeholder=\"*******\"\n                                />\n                            </div>\n                            <button className=\"btn btn-secondary btn-lg btn-block\">Log In</button>\n                        </form>\n                        { this.state.message && <div> { this.state.message } </div> }\n                    </div>\n                </div>\n            </div>\n        </div>\n       )\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\n\nclass Home extends Component {\n   render (){\n       return (\n           <section>\n               <h1> Home Page </h1>\n               <p> Welcome to Iron Task </p>\n           </section>\n       )\n   }\n\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass DropdownResource extends Component {\n  state = {\n    technicians: [],\n    singleTech: \"\",\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/api/usersListApi?role=Technician`, { withCredentials:true })\n    .then(techs =>  {              \n      this.setState ({technicians:techs.data.data})        \n    });\n  }\n\n  pickupUser(e){\n    this.props.sendUser(e.target.value)\n  }\n\n  render (){\n    const { technicians } = this.state;\n    return (\n      <div>\n        <select className=\"form-control\"onChange={ e => this.pickupUser(e) } >\n        <option>--Select Technician--</option>\n        { technicians.map(user => <option key={ user._id } value={ user.fullName }> { user.fullName } </option> ) }\n        </select>\n      </div>\n    )\n  }  \n}\n\nexport default DropdownResource;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass DropdownClient extends Component {\n  state = {\n    clients: [],\n    singleClient: \"\",\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/clients/clientListApi`, { withCredentials:true })\n    .then(client =>  {            \n      this.setState ({clients:client.data.data})        \n    });\n  }\n\n  pickupUser(e){\n    this.props.sendUser(e.target.value)\n  }\n\n  render (){\n    const { clients } = this.state;\n    \n    return (\n      <div >\n        <select className=\"form-control\" onChange={ e => this.pickupUser(e) } > \n        <option>-- Select Account Name --</option>       \n        { clients.map(user => <option key={ user._id } value={ user.accountName }> { user.accountName } </option> ) }\n        </select>\n      </div>\n    )\n  }  \n} \n\n\n\nexport default DropdownClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DropdownResource from '../form-pages/Dropdown-Resource';\nimport DropdownClient from '../form-pages/Dropdown-Client';\n\n\nclass AddTicket extends Component {\n\n  state = {\n    accountName: \"\",\n    contact: \"\",\n    status: \"\",\n    priority: \"\",\n    issueType: \"\",\n    primaryResource: \"\" ,\n    ticketTitle:\"\",\n    ticketDescription: \"\",\n    isSubmitSuccessful: false,  \n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }  \n\n  getClient(client){    \n    this.setState({accountName:client})    \n  }\n\n  getTech(technician){\n    this.setState({ primaryResource: technician})\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n\n    axios.post(\n      `${process.env.REACT_APP_API_URL}/tickets/addTicket`,\n        this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"new ticket: \", response.data);\n        this.setState({ isSubmitSuccessful: true })\n    } )\n    .catch( err => console.log(err) );\n  }\n\n  render(){\n      return(\n        <div className=\"row\">\n          <div className=\"col-md-9 mx-auto\">\n          <div className=\"card rounded-0\">\n              <div className=\"card-header\">\n                  <h3 className=\"mb-0 my-2\">Add Ticket</h3>\n              </div>\n          <div className=\"card-body\"> \n          <form onSubmit={ event => this.handleSubmit(event) } > \n            <div className=\"row\">\n              <div className=\"col-md-4 mx-auto\">            \n                <div className=\"form-group\">\n                    <label> Account Name: </label>                  \n                    <DropdownClient sendUser={ user => this.getClient(user) } className=\"form-control\"  />\n                  </div>                \n                  <div className=\"form-group\">\n                      <label> Contact: </label>\n                      <input \n                        className=\"form-control\"\n                        value = { this.state.contact }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"contact\"\n                        placeholder = \"\"\n                      />\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Status: </label>\n                      <select className=\"form-control\" value={ this.state.status } name=\"status\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Status--\" >-- Select Status -- </option>\n                              <option value=\"New\"> New </option>\n                              <option value=\"In Progress\" > In Progress </option>\n                              <option value=\"Waiting on Customer\" > Waiting on Customer </option>\n                              <option value=\"Complete\" > Complete </option>\n                      </select>\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Priority: </label>\n                      <select className=\"form-control\" value={ this.state.priority } name=\"priority\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Priority--\" >-- Select Priority --</option>\n                              <option value=\"Low\"> Low </option>\n                              <option value=\"Medium\"> Medium </option>  \n                              <option value=\"High\"> High </option>                \n                      </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label> Issue Type: </label>\n                    <select className=\"form-control\" value={ this.state.issueType } name=\"issueType\" onChange= { event => this.genericSync(event) } >\n                            <option value=\"--Select Issue Type--\" >-- Select Issue Type -- </option>\n                            <option value=\"Infrastructure\">Infrastructure</option>\n                            <option value=\"Hardware\"> Hardware </option>  \n                            <option value=\"Software\"> Software </option> \n                            <option value=\"User Administration\"> User Administration </option>               \n                    </select>\n                </div>\n                  <div className=\"form-group\"> \n                  <label> Primary Resource: </label> \n                  <DropdownResource sendUser={ user => this.getTech(user) }  />\n              </div>\n                </div>\n                <div className=\"col-md-8 mx-auto\"> \n                  <div className=\"form-group\"> \n                    <label> Ticket Title: </label>\n                      <input className=\"form-control\"\n                        value = { this.state.ticketTitle }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"ticketTitle\"\n                        placeholder = \"\"\n                    />\n                  </div>  \n                  <div className=\"form-group\"> \n                    <label> Ticket Description: </label>\n                      <textarea className=\"form-control z-depth-1\"\n                        value = { this.state.ticketDescription }\n                        onChange={ e => this.genericSync(e) }\n                        rows=\"10\"\n                        type = \"text\"\n                        name = \"ticketDescription\"\n                        placeholder = \"Add Ticket Summary\"\n                    />\n                  </div>           \n                </div>\n              <button className=\"btn btn-secondary btn-lg btn-block\">Submit</button>        \n              </div>\n          </form>\n        </div>\n      </div>\n      </div>\n    </div>\n     \n    )\n  }\n\n\n\n}\n\nexport default AddTicket;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddClient extends Component {\n  state = {\n    accountName:\"\",\n    address1:\"\",\n    Phone:\"\",\n    active:false,    \n    isSubmitSuccessful:false\n  }\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });    \n  } \n  toggleChange = () => {\n    this.setState({\n      active: !this.state.active      \n    });   \n  }\n  handleSubmit(event){\n    event.preventDefault();\n    console.log(this.state)\n    axios.post(\n        `${process.env.REACT_APP_API_URL}/clients/addClient`,\n        this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"new client: \", response.data);\n        this.setState({ isSubmitSuccessful: true })\n    } )\n    .catch( err => console.log(err) );\n  }\n  render(){\n    return(\n      <section className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card rounded-0\">\n            <div className=\"card-header\">\n                <h3 className=\"mb-0 my-2\">Add Account</h3>\n            </div>\n          <div className=\"card-body\">      \n            <form onSubmit={event => this.handleSubmit(event)}>\n              <div className=\"form-group\">\n                <label>Account Name:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.accountName }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"accountName\"\n                    placeholder = \"\"\n                />\n              </div>                       \n              <div className=\"form-group\">\n                <label>Address:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.address1 }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"address1\"\n                    placeholder = \"\"\n                /> \n              </div>            \n              <div className=\"form-group\">\n                <label>Phone:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.Phone }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"Phone\"\n                    placeholder = \"\"\n                />  \n              </div>            \n              <div className=\"form-group-row\">\n                <label>Active:</label>\n                <input \n                    className=\"form-control-row ml-2\"\n                    type=\"checkbox\"\n                    name=\"active\"\n                    checked={this.state.active}\n                    onChange={this.toggleChange}\n                />  \n              </div>            \n              <button className=\"btn btn-secondary btn-lg btn-block\">Submit</button> \n            </form>\n            </div>\n        </div>\n      </div>\n    </section>\n    )\n  }\n\n}\n\nexport default AddClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nclass ClientList extends Component {\n    state = {\n      clientArray:[]\n    }    \n\n    componentDidMount() {\n      axios.get(\n        `${process.env.REACT_APP_API_URL}/clients/clientList`,\n        \n      { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n          console.log(\"ClientList\", response.data.data);\n          // update our state array with the data from the API\n          this.setState({ clientArray: response.data.data });\n      })\n      .catch(err => {\n          console.log(\"Phone List ERROR\", err);\n          alert(\"Sorry! Something went wrong.\");\n      });\n    }    \n\n    render(){\n      const { clientArray } = this.state;\n      return(\n        <section className=\"row\">\n         <div className=\"col-md-9 mx-auto\">\n          <h2> Clients </h2>\n              <p>Currently we have: { clientArray.length } clients.</p>\n              <table className=\"table table-sm table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Account Name</th>\n                  <th scope=\"col\">Address</th> \n                  <th scope=\"col\">Phone</th>  \n                  <th scope=\"col\">Active</th>              \n                </tr>\n             </thead>\n            <tbody>              \n                { clientArray.map((oneClient) => {\n                  return(\n                    <tr key={ oneClient._id }>\n                        <td> {oneClient.accountName} </td>\n                        <td> {oneClient.address1} </td>\n                        <td> {oneClient.Phone} </td>                        \n                        <td><Link to={`/edit-client/${oneClient._id}`}>\n                          <button className=\"btn btn-secondary btn-sm\">Edit</button>  \n                          </Link>\n                        </td>                                             \n                    </tr>                  \n                  )\n                })}              \n            </tbody>\n          </table>\n        </div>\n      </section>\n      )\n    }\n}\n\nexport default ClientList;\n\n","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass EditClient extends Component {\n  \n  state = {\n      accountName: \"\",\n      address1: \"\",\n      Phone: \"\",\n      active: false        \n  }  \n\n  //Update state of inputs\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  //Update state of checkbox\n  toggleChange = () => {\n    this.setState({\n      active: !this.state.active      \n    });    \n  }\n\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    //console.log(params.clientId)  \n    axios.get(`${process.env.REACT_APP_API_URL}/clients/clientListEdit/${params.clientId}`)\n    .then(response => {\n      console.log(response.data.data);\n      // update our state array with the data from the API\n      this.setState({ \n                      accountName: response.data.data.accountName,\n                      address1: response.data.data.address1,\n                      Phone:response.data.data.Phone,\n                      active: response.data.data.active\n                    });\n      console.log(this.state)\n    })\n      .catch(err => {\n        //console.log(\"Phone List ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  handleSubmit(event) {    \n    event.preventDefault(); \n    const { match: { params } } = this.props;\n    console.log(\"submit\", this.state)  \n    axios.put(     \n      `${process.env.REACT_APP_API_URL}/clients/updateClient/${params.clientId}`,\n         this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"updated client: \", response.data);        \n    } )\n    .catch( err => console.log(err) );\n     \n  }\n\n  \n\n  render(){    \n    return(\n      <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card rounded-0\">\n              <div className=\"card-header\">\n                  <h3 className=\"mb-0 my-2\">Edit Client Profile</h3>\n              </div>\n          <div className=\"card-body\">\n            <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label>Account Name:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.accountName }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"accountName\"              \n              />\n            </div>\n                       \n            <div className=\"form-group\">\n              <label>Address:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.address1 }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"address1\"              \n              />\n            </div>\n              \n            <div className=\"form-group\">\n              <label>Phone:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.Phone }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"Phone\"              \n              />\n            </div>\n            \n            <div className=\"form-group-row\">\n              <label>Active:</label>\n              <input \n                  className = \"form-control-row ml-2\"\n                  type=\"checkbox\"\n                  name=\"active\"\n                  checked={this.state.active}\n                  onChange={this.toggleChange}\n              />\n            </div>\n              \n              <button className=\"btn btn-secondary btn-lg btn-block\">Update</button> \n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default EditClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nclass UserList extends Component {\n    state = {\n      userArray:[]\n    } \n    componentDidMount() {\n      // retrieve the info from the API as soon as the component loads\n      axios.get(\n        `${process.env.REACT_APP_API_URL}/api/usersList`,\n        // { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n          console.log(\"UserList front = = =\", response.data.data);\n          // update our state array with the data from the API\n          this.setState({ userArray: response.data.data });\n      })\n      .catch(err => {\n          console.log(\"User List ERROR\", err.response);\n          alert(\"Sorry! Something went wrong.\");\n      });\n    }    \n\n    render(){\n      const { userArray } = this.state;\n      return(\n        <section className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <h2> Users </h2>\n            <p>Currently we have: { userArray.length } users.</p>\n            <table className=\"table table-sm table-hover\">\n              <thead>\n              <tr>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">Email Address</th> \n                <th scope=\"col\">Status</th>  \n                <th scope=\"col\">Action</th>              \n              </tr>\n            </thead>\n            <tbody>\n              { userArray.map((oneUser) => {\n                return(\n                  <tr key={ oneUser._id }>\n                      <td>                                \n                        { oneUser.fullName }                                \n                      </td>\n                      <td>                                \n                          { oneUser.email }                                \n                      </td>\n                      <td>\n                        { oneUser.status } \n                      </td>\n                      <td>\n                        <Link to={`/edit-user/${oneUser._id}`}> \n                          <button className=\"btn btn-secondary btn-sm\">Edit</button> \n                        </Link>\n                      </td>\n                  </tr>                  \n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      )\n    }\n}\n\nexport default UserList;","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass EditUser extends Component {\n  \n  state = {\n      fullName: \"\",\n      email:\"\",\n      status: \"\",\n      role: \"\",             \n  }\n  //Update state of inputs\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    //console.log(params.clientId)  \n    axios.get(`${process.env.REACT_APP_API_URL}/api/profile/${params.userId}`)\n    .then(response => {\n      console.log(\"response\",response.data.data);\n      // update our state array with the data from the API\n      this.setState({ \n                      fullName: response.data.data.fullName,\n                      email: response.data.data.email,\n                      status:response.data.data.status,\n                      role: response.data.data.role\n                    });\n      console.log(this.state)\n    })\n      .catch(err => {        \n        alert(\"Sorry! Something went wrong.\");\n    });\n  }\n  handleSubmit(event) {    \n    event.preventDefault(); \n    const { match: { params } } = this.props;\n    console.log(\"pre-submit\", this.state)  \n    axios.put(     \n        `${process.env.REACT_APP_API_URL}/api/updateUser/${params.userId}`,\n         this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"updated user: \", response.data.data);        \n    } )\n    .catch( err => console.log(err) );\n     \n  }\n\n  render(){    \n    return(\n      <div className=\"row\">\n      <div className=\"col-md-6 mx-auto\">\n        <div className=\"card rounded-0\">\n            <div className=\"card-header\">\n                <h3 className=\"mb-0 my-2\">Edit User Profile</h3>\n            </div>\n        <div className=\"card-body\">      \n            <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label>User Name:</label>\n              <input \n                  className=\"form-control\"\n                  value = { this.state.fullName }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"fullName\"              \n              />\n            </div>\n                        \n            <div className=\"form-group\">\n              <label>User Email:</label>\n              <input \n                  className=\"form-control\"\n                  value = { this.state.email }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"email\"              \n              />\n            </div>\n              \n            <div className=\"form-group\">\n              <label>Role:</label>\n              <select className=\"form-control\" value={ this.state.role } name=\"role\" onChange= { event => this.genericSync(event) } >                  \n                      <option value=\"Admin\"> Admin </option>\n                      <option value=\"Technician\">Technician</option>\n                      <option value=\"Client\"> Client </option> \n              </select> \n            </div>\n\n            <div className=\"form-group\">\n              <label>Status:</label>\n              <select className=\"form-control\" value={ this.state.status } name=\"status\" onChange= { event => this.genericSync(event) } >                  \n                      <option value=\"Pending\">Pending</option>\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Inactive\">Inactive</option> \n              </select>\n            </div>         \n            <button className=\"btn btn-secondary btn-lg btn-block\">Update</button> \n          </form>\n          </div>\n        </div>\n      </div>\n    </div>\n   )\n }\n}\n\nexport default EditUser;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  logoutClick() {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/logout`,\n        { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n        const { userDoc } = response.data;\n        this.props.onUserChange(userDoc);\n      })\n      .catch(err => {\n        console.log(\"Logout ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n\n  render(){\n    //let {fullName} = this.props.userName\n    return(\n      <header>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-5 mb-5\">          \n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login-page\"> Login </NavLink>  \n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/signup-page\"> Signup </NavLink>  \n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/user-list\">User List </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/client-list\">Client List </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/add-ticket\"> Add Ticket </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/add-client\"> Add Client </NavLink>\n            </li>\n          </ul>\n          {this.props.userName ?\n              <span className=\"navbar-text\">\n                {this.props.userName}  | \n                <button onClick={() => this.logoutClick()} className=\"button\">Logout</button> \n              </span> :\n              <span>Login </span>\n          }\n       </div>\n      </nav>      \n    </header>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Switch, NavLink, Route } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport Signup from './components/user-pages/Signup';\nimport Login from './components/user-pages/Login';\nimport Home from './components/Home';\nimport AddTicket from './components/tech-pages/AddTicket'\nimport AddClient from './components/client-pages/Add-Client'\nimport ClientList from './components/client-pages/Client-List'\nimport EditClient from './components/client-pages/Edit-Client'\nimport UserList from './components/admin-pages/User-List'\nimport EditUser from './components/admin-pages/Edit-User'\nimport Navbar from './components/site-pages/Navbar'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentUser: null,\n      role: null,\n      name: null,\n    }\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/api/checkuser`, { withCredentials:true })\n    .then(responseFromBackend => {\n     console.log(\"Check User in APP.JS: \",responseFromBackend.data.userDoc)\n      const { userDoc } = responseFromBackend.data;\n      //console.log(\"userDoc\", userDoc.role)\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => console.log(\" Err while check the user: \", err))\n  }\n\n  // this is the method for updating \"currentUser\"\n  // (must be defined in App.js since it's the owner of \"currentUser\" now)\n  syncCurrentUser(user){\n    this.setState({ currentUser: user });    \n    //this.setState({ role: user.role})\n    //this.setState({ name: user.fullName })\n    //console.log(\"usuario\",this.state.name)\n  }\n\n  render() {\n    //const {role} = this.state.currentUser\n   // console.log(role)\n    return (\n      <div className=\"App\">        \n        <div className=\"container\">\n          {this.state.currentUser ?(\n            <Navbar userName={this.state.name} onUserChange={ userDoc => this.syncCurrentUser(userDoc) } />\n          ):\n          <Navbar />}\n            <Switch>\n              {/* this is example how to normally do the Route: */}\n              {/* <Route path=\"/somePage\" component={ someComponentThatWillRenderWhenUSerClickThisLink }   /> */}\n              <Route exact path=\"/\" component={ Home } />\n                {/* this way we use when we are passing params down to componentDidMount() {\n                  so we can't use component={}, but instead we have to use render ={() => <someComponent/>}\n                }\n                  */}\n              <Route path=\"/signup-page\" render={ () => \n                <Signup currentUser={this.state.currentUser} \n                onUserChange={ userDoc => this.syncCurrentUser(userDoc) }   />\n               }  />\n              \n              <Route path=\"/login-page\" render={ () => \n                <Login currentUser={ this.state.currentUser } \n                onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n              }  />\n\n              <Route path=\"/add-ticket\" component={ AddTicket }/>\n              <Route path=\"/add-client\" component={ AddClient }/>\n              <Route path=\"/client-list\" component={ ClientList }/>\n              <Route path=\"/edit-client/:clientId\" component={ EditClient }/>\n              <Route path=\"/user-list\" component={ UserList }/>\n              <Route path=\"/edit-user/:userId\" component={ EditUser }/>             \n              \n            </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\"; \n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}