{"version":3,"sources":["components/user-pages/Signup.js","components/user-pages/Login.js","components/Home.js","components/form-pages/Dropdown-Resource.js","components/form-pages/Dropdown-Client.js","components/tech-pages/AddTicket.js","components/tech-pages/EditTicket.js","components/tech-pages/ViewTickets.js","components/client-pages/Add-Client.js","components/client-pages/Client-List.js","components/client-pages/Edit-Client.js","components/admin-pages/User-List.js","components/admin-pages/Edit-User.js","components/site-pages/Navbar.js","components/site-pages/NavbarTech.js","components/site-pages/NavbarDefault.js","components/site-pages/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Signup","state","fullName","email","originalPassword","message","event","_event$target","target","name","value","this","setState","Object","defineProperty","_this2","preventDefault","axios","post","concat","process","withCredentials","then","responseFromServer","userDoc","data","props","onUserChange","catch","err","response","_this3","currentUser","react_default","a","createElement","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","Component","Login","console","log","react_router","to","Home","src","alt","DropdownResource","technicians","singleTech","get","techs","e","sendUser","pickupUser","selectedTechnician","map","user","key","_id","DropdownClient","clients","singleClient","client","clientSelected","accountName","AddTicket","contact","status","priority","issueType","primaryResource","ticketTitle","ticketDescription","ticketSolution","isSubmitSuccessful","technician","history","push","Dropdown_Client","getClient","Dropdown_Resource","getTech","rows","EditTicket","params","match","ticketId","alert","put","_this4","ViewTickets","ticketsArray","length","scope","oneTicket","react_router_dom","AddClient","address1","Phone","active","toggleChange","_this","checked","ClientList","clientArray","oneClient","EditClient","clientId","UserList","userArray","oneUser","EditUser","role","userId","Navbar","userRole","width","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","userName","aria-haspopup","aria-labelledby","style","textDecoration","backgroundColor","activeStyle","onClick","logUserOut","NavbarTech","NavbarDefault","Footer","color","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","responseFromBackend","syncCurrentUser","delete","site_pages_Navbar","logout","site_pages_NavbarTech","site_pages_NavbarDefault","exact","path","component","render","user_pages_Signup","user_pages_Login","site_pages_Footer","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d131f16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  state = {\n     fullName: \"\",\n     email: \"\",\n     originalPassword: \"\",\n     message: null\n  }; \n  genericSync(event){\n    const { name, value } = event.target;\n    this.setState({ [name]:value });\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    axios.post(\n        `${process.env.REACT_APP_API_URL}/api/signup`, // 1st and mandatory: which route I'm hitting in the backend\n        this.state, // 2nd and mandatory: what I'm sending (since it's POST route I have to send something)\n        { withCredentials:true } // 3rd and optional: credentials:true in CORS\n    )\n    .then( responseFromServer => {\n         //console.log(\"response is: \", responseFromServer);\n        const { userDoc } = responseFromServer.data;\n        this.props.onUserChange(userDoc);\n    } )\n    .catch(err => {\n        // console.log(\"error while signup: \", err);\n        if(err.response && err.response.data){\n            return this.setState({ message:err.response.data.message });\n        }\n    })    \n  }\n  render () {    \n    if(this.props.currentUser){\n        return(\n            <section>\n                <h2> You are signed up! </h2>\n                <p> Welcome, { this.props.currentUser.fullName }! \n                    Your email is: <b> { this.props.currentUser.email } </b>\n                </p>\n            </section>\n        )\n   }  \n\n  return (\n    <div className=\"row\">\n        <div className=\"col-md-6 mx-auto \">\n            <div className=\"card rounded-0\">\n                <div className=\"card-header\">\n                    <h3 className=\"mb-0 my-2\">Create Account</h3>\n                </div>\n                <div className=\"card-body\">       \n                    <form onSubmit={ event => this.handleSubmit(event) } >\n                       <div className=\"form-group\">\n                            <label> Full Name </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.fullName }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"text\"\n                                name=\"fullName\"\n                                placeholder=\"Full Name\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label> Email </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.email }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Email Address\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label> Password </label>\n                            <input\n                                className=\"form-control\"\n                                value = { this.state.originalPassword }\n                                onChange={ event => this.genericSync(event) }\n                                type=\"password\"\n                                name=\"originalPassword\"\n                                placeholder=\"*******\"\n                            />\n                        </div>\n                        \n                        <button className=\"btn btn-secondary btn-lg btn-block\"> Sign Up </button>\n                    </form>\n                    {/* if the message is not NULL then show the message */}\n                    { this.state.message && <div> { this.state.message } </div> }\n                </div>\n            </div>\n        </div>\n     </div>\n   \n    )\n  }\n}\n\nexport default Signup;\n\n\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Login extends Component {\n   \n    state = {\n        email: \"\",\n        originalPassword: \"\",\n        message: null,\n    }\n    \n    genericSync(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        axios.post(\n            `${process.env.REACT_APP_API_URL}/api/login`,\n            this.state,\n            { withCredentials: true }, // FORCE axios to send cookies across domains\n        )\n        .then(response => {\n            console.log(\"Login Page\", response.data);            \n            const { userDoc } = response.data;\n            // send \"userDoc\" to the App.js function that changes \"currentUser\"\n            this.props.onUserChange(userDoc);\n            console.log('success')\n        })\n        .catch(err => {\n            if (err.response && err.response.data) {\n              // console.error(\"API response\", err.response.data)\n              return  this.setState({ message: err.response.data.message }) \n            }\n        });\n    }\n\n\n\n    render(){\n        // check if currentUser exists and if so, redirect to some other page\n        if(this.props.currentUser){\n            return <Redirect to=\"/\" />\n        }\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-6 mx-auto\">\n                    <div className=\"card rounded-0\">\n                        <div className=\"card-header\">\n                            <h3 className=\"mb-0 my-2\">Sign in</h3>\n                        </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={event => this.handleSubmit(event)}>\n                            <div className=\"form-group\">\n                                <label> Email:  </label>\n                                <input \n                                    className=\"form-control\"\n                                    value={this.state.email}\n                                    onChange={event => this.genericSync(event)}\n                                    type=\"email\" \n                                    name=\"email\" \n                                    placeholder=\"Email address\" \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password:</label>\n                                <input \n                                    className=\"form-control\"\n                                    value={this.state.originalPassword}\n                                    onChange={event => this.genericSync(event)}\n                                    type=\"password\" \n                                    name=\"originalPassword\" \n                                    placeholder=\"*******\"\n                                />\n                            </div>\n                            <button className=\"btn btn-secondary btn-lg btn-block\">Log In</button>\n                        </form>\n                        { this.state.message && <div> { this.state.message } </div> }\n                    </div>\n                </div>\n            </div>\n        </div>\n       )\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\n\nclass Home extends Component {\n   render (){\n       return (\n           <section className=\"row\">\n             <div className= \"col-md-12 mx-auto\">               \n               <h1 className=\"text-center\" > Welcome to IronTask </h1>\n               <img className=\"rounded mx-auto d-block\" src=\"https://res.cloudinary.com/dzhbvaunu/image/upload/v1557556314/IronTask/IronTask-Logo.png\" alt=\"\" />\n            </div>\n           </section>\n       )\n   }\n\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass DropdownResource extends Component {\n  state = {\n    technicians: [],\n    singleTech: \"\",\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/api/usersListApi?role=Technician`, { withCredentials:true })\n    .then(techs =>  {              \n      this.setState ({technicians:techs.data.data})        \n    });\n  }\n\n  pickupUser(e){\n    this.props.sendUser(e.target.value)\n  }\n\n  render (){\n    const { technicians } = this.state;\n    return (\n      <div>\n        <select className=\"form-control\"onChange={ e => this.pickupUser(e) } value = {this.props.selectedTechnician} >\n        <option>--Select Technician--</option>\n        { technicians.map(user => <option key={ user._id } value={ user.fullName }> { user.fullName } </option> ) }\n        </select>\n      </div>\n    )\n  }  \n}\n\nexport default DropdownResource;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass DropdownClient extends Component {\n  state = {\n    clients: [],\n    singleClient: \"\",\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/clients/clientListApi`, { withCredentials:true })\n    .then(client =>  {            \n      this.setState ({clients:client.data.data})        \n    });\n  }\n\n  pickupUser(e){\n    this.props.sendUser(e.target.value)\n  }\n\n  render (){\n    const { clients } = this.state;\n    \n    return (\n      <div >\n        <select className=\"form-control\" onChange={ e => this.pickupUser(e) } value = {this.props.clientSelected}> \n        <option>-- Select Account Name --</option>       \n        { clients.map(user => <option key={ user._id } value={ user.accountName }> { user.accountName } </option> ) }\n        </select>\n      </div>\n    )\n  }  \n} \n\n\n\nexport default DropdownClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DropdownResource from '../form-pages/Dropdown-Resource';\nimport DropdownClient from '../form-pages/Dropdown-Client';\n\n\nclass AddTicket extends Component {\n\n  state = {\n    accountName: \"\",\n    contact: \"\",\n    status: \"\",\n    priority: \"\",\n    issueType: \"\",\n    primaryResource: \"\" ,\n    ticketTitle:\"\",\n    ticketDescription: \"\",\n    ticketSolution: \"\",\n    isSubmitSuccessful: false,  \n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }  \n\n  getClient(client){    \n    this.setState({accountName:client})    \n  }\n\n  getTech(technician){\n    this.setState({ primaryResource: technician})\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n\n    axios.post(\n      `${process.env.REACT_APP_API_URL}/tickets/addTicket`,\n        this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"new ticket: \", response.data);\n        this.setState({ isSubmitSuccessful: true })\n        this.props.history.push('/view-ticket'); \n    } )\n    .catch( err => console.log(err) );\n  }\n\n  render(){\n      return(\n        <div className=\"row\">\n          <div className=\"col-md-12 mx-auto\">\n          <div className=\"card rounded-0\">\n              <div className=\"card-header\">\n                  <h3 className=\"mb-0 my-2\">Add Ticket</h3>\n              </div>\n          <div className=\"card-body\"> \n          <form onSubmit={ event => this.handleSubmit(event) } > \n            <div className=\"row\">\n              <div className=\"col-md-4 mx-auto\">            \n                <div className=\"form-group\">\n                    <label> Account Name: </label>                  \n                    <DropdownClient sendUser={ user => this.getClient(user) } className=\"form-control\"  />\n                  </div>                \n                  <div className=\"form-group\">\n                      <label> Contact: </label>\n                      <input \n                        className=\"form-control\"\n                        value = { this.state.contact }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"contact\"\n                        placeholder = \"\"\n                      />\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Status: </label>\n                      <select className=\"form-control\" value={ this.state.status } name=\"status\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Status--\" >-- Select Status -- </option>\n                              <option value=\"New\"> New </option>\n                              <option value=\"In Progress\" > In Progress </option>\n                              <option value=\"Waiting on Customer\" > Waiting on Customer </option>\n                              <option value=\"Complete\" > Complete </option>\n                      </select>\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Priority: </label>\n                      <select className=\"form-control\" value={ this.state.priority } name=\"priority\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Priority--\" >-- Select Priority --</option>\n                              <option value=\"Low\"> Low </option>\n                              <option value=\"Medium\"> Medium </option>  \n                              <option value=\"High\"> High </option>                \n                      </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label> Issue Type: </label>\n                    <select className=\"form-control\" value={ this.state.issueType } name=\"issueType\" onChange= { event => this.genericSync(event) } >\n                            <option value=\"--Select Issue Type--\" >-- Select Issue Type -- </option>\n                            <option value=\"Infrastructure\">Infrastructure</option>\n                            <option value=\"Hardware\"> Hardware </option>  \n                            <option value=\"Software\"> Software </option> \n                            <option value=\"User Administration\"> User Administration </option>               \n                    </select>\n                </div>\n                  <div className=\"form-group\"> \n                  <label> Primary Resource: </label> \n                  <DropdownResource sendUser={ user => this.getTech(user) }  />\n              </div>\n                </div>\n                <div className=\"col-md-8 mx-auto\"> \n                  <div className=\"form-group\"> \n                    <label> Ticket Title: </label>\n                      <input className=\"form-control\"\n                        value = { this.state.ticketTitle }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"ticketTitle\"\n                        placeholder = \"\"\n                    />\n                  </div>  \n                  <div className=\"form-group\"> \n                    <label> Ticket Description: </label>\n                      <textarea className=\"form-control z-depth-1\"\n                        value = { this.state.ticketDescription }\n                        onChange={ e => this.genericSync(e) }\n                        rows=\"10\"\n                        type = \"text\"\n                        name = \"ticketDescription\"\n                        placeholder = \"Add Ticket Summary\"\n                    />\n                  </div>           \n                </div>\n              <button className=\"btn btn-secondary btn-lg btn-block\">Submit</button>        \n              </div>\n          </form>\n        </div>\n      </div>\n      </div>\n    </div>\n     \n    )\n  }\n\n\n\n}\n\nexport default AddTicket;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DropdownResource from '../form-pages/Dropdown-Resource';\nimport DropdownClient from '../form-pages/Dropdown-Client';\n\n\nclass EditTicket extends Component {\n\n  state = {\n    accountName: \"\",\n    contact: \"\",\n    status: \"\",\n    priority: \"\",\n    issueType: \"\",\n    primaryResource: \"\" ,\n    ticketTitle:\"\",\n    ticketDescription: \"\",\n    isSubmitSuccessful: false,  \n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }  \n\n  getClient(client){    \n    this.setState({accountName:client})    \n  }\n\n  getTech(technician){\n    this.setState({ primaryResource: technician})\n  }\n\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    //console.log(params.clientId)  \n    axios.get(`${process.env.REACT_APP_API_URL}/tickets/ticketEdit/${params.ticketId}`)\n    .then(response => {\n      console.log(response.data.data);\n      // update our state array with the data from the API\n      this.setState({ \n                      accountName: response.data.data.accountName,\n                      contact: response.data.data.contact,\n                      status: response.data.data.status,\n                      priority: response.data.data.priority,\n                      issueType:response.data.data.issueType,\n                      primaryResource:response.data.data.primaryResource,\n                      ticketTitle:response.data.data.ticketTitle,\n                      ticketDescription:response.data.data.ticketDescription,\n                      ticketSolution: response.data.data.ticketSolution,\n                      ticketId: response.data.data.ticketId\n                    });\n      \n      console.log(this.state)\n    })\n      .catch(err => {\n        //console.log(\"Phone List ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const { match: { params } } = this.props;\n    console.log(\"pre-submit\", this.state) \n    axios.put(\n      `${process.env.REACT_APP_API_URL}/tickets/updateTicket/${params.ticketId}`,\n        this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"updated ticket: \", response.data);\n        this.setState({ isSubmitSuccessful: true })\n        this.props.history.push('/view-ticket'); \n    } )\n    .catch( err => console.log(err) );\n  }\n\n  render(){\n      return(\n        <div className=\"row\">\n          <div className=\"col-md-12 mx-auto\">\n          <div className=\"card rounded-0\">\n              <div className=\"card-header\">\n                  <h3 className=\"mb-0 my-2\">Ticket # {this.state.ticketId}</h3>\n              </div>\n          <div className=\"card-body\"> \n          <form onSubmit={ event => this.handleSubmit(event) } > \n            <div className=\"row\">\n              <div className=\"col-md-4 mx-auto\">            \n                <div className=\"form-group\">\n                    <label> Account Name: </label>                  \n                    <DropdownClient sendUser={ user => this.getClient(user) } clientSelected={ this.state.accountName} className=\"form-control\"  />\n                  </div>                \n                  <div className=\"form-group\">\n                      <label> Contact: </label>\n                      <input \n                        className=\"form-control\"\n                        value = { this.state.contact }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"contact\"\n                        placeholder = \"\"\n                      />\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Status: </label>\n                      <select className=\"form-control\" value={ this.state.status } name=\"status\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Status--\" >-- Select Status -- </option>\n                              <option value=\"New\"> New </option>\n                              <option value=\"In Progress\" > In Progress </option>\n                              <option value=\"Waiting on Customer\" > Waiting on Customer </option>\n                              <option value=\"Complete\" > Complete </option>\n                      </select>\n                  </div>\n                  <div className=\"form-group\"> \n                      <label> Priority: </label>\n                      <select className=\"form-control\" value={ this.state.priority } name=\"priority\" onChange= { event => this.genericSync(event) } >\n                              <option value=\"--Select Priority--\" >-- Select Priority --</option>\n                              <option value=\"Low\"> Low </option>\n                              <option value=\"Medium\"> Medium </option>  \n                              <option value=\"High\"> High </option>                \n                      </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label> Issue Type: </label>\n                    <select className=\"form-control\" value={ this.state.issueType } name=\"issueType\" onChange= { event => this.genericSync(event) } >\n                            <option value=\"--Select Issue Type--\" >-- Select Issue Type -- </option>\n                            <option value=\"Infrastructure\">Infrastructure</option>\n                            <option value=\"Hardware\"> Hardware </option>  \n                            <option value=\"Software\"> Software </option> \n                            <option value=\"User Administration\"> User Administration </option>               \n                    </select>\n                </div>\n                  <div className=\"form-group\"> \n                  <label> Primary Resource: </label> \n                  <DropdownResource sendUser={ user => this.getTech(user) } selectedTechnician = {this.state.primaryResource}  />\n                </div>\n                </div>\n                <div className=\"col-md-8 mx-auto\"> \n                  <div className=\"form-group\"> \n                    <label> Ticket Title: </label>\n                      <input className=\"form-control\"\n                        value = { this.state.ticketTitle }\n                        onChange={ e => this.genericSync(e) }\n                        type = \"text\"\n                        name = \"ticketTitle\"\n                        placeholder = \"\"\n                    />\n                  </div>  \n                  <div className=\"form-group\"> \n                    <label> Ticket Description: </label>\n                      <textarea className=\"form-control z-depth-1\"\n                        value = { this.state.ticketDescription }\n                        onChange={ e => this.genericSync(e) }\n                        rows=\"6\"\n                        type = \"text\"\n                        name = \"ticketDescription\"\n                        placeholder = \"Add Ticket Summary\"\n                    />\n                  </div> \n                  <div className=\"form-group\"> \n                    <label> Solution: </label>\n                      <textarea className=\"form-control z-depth-1\"\n                        value = { this.state.ticketSolution }\n                        onChange={ e => this.genericSync(e) }\n                        rows=\"6\"\n                        type = \"text\"\n                        name = \"ticketSolution\"\n                        placeholder = \"Add Ticket Solution\"\n                    />\n                  </div>              \n                </div>\n              <button className=\"btn btn-secondary btn-lg btn-block\">Update Ticket</button>        \n              </div>\n          </form>\n        </div>\n      </div>\n      </div>\n    </div>\n     \n    )\n  }\n}\n\nexport default EditTicket;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nclass ViewTickets extends Component {\n    state = {\n      ticketsArray:[]\n    }    \n\n    componentDidMount() {\n      axios.get(\n        `${process.env.REACT_APP_API_URL}/tickets/ticketsList`,\n        \n      { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n          console.log(\"TicketList\", response.data.data);\n          // update our state array with the data from the API\n          this.setState({ ticketsArray: response.data.data });\n      })\n      .catch(err => {\n          alert(\"Sorry! Something went wrong.\");\n      });\n    }    \n\n    render(){\n      const { ticketsArray } = this.state;\n      return(\n        <section className=\"row\">\n         <div className=\"col-md-12 mx-auto\">\n          <h2> Tickets </h2>\n              <p>Currently we have: { ticketsArray.length } tickets.</p>\n              <table className=\"table table-sm table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Ticket #</th>\n                  <th scope=\"col\">Account Name</th> \n                  <th scope=\"col\">Contact</th>  \n                  <th scope=\"col\">Primary Resource</th>\n                  <th scope=\"col\">Action</th>               \n                </tr>\n             </thead>\n            <tbody>              \n                { ticketsArray.map((oneTicket) => {\n                  return(\n                    <tr key={ oneTicket._id }>\n                        <td> {oneTicket.ticketId} </td>\n                        <td> {oneTicket.accountName} </td>\n                        <td> {oneTicket.contact} </td>\n                        <td> {oneTicket.primaryResource} </td>                        \n                        <td><Link to={`/edit-ticket/${oneTicket._id}`}>\n                          <button className=\"btn btn-secondary btn-sm\">Update Ticket</button>  \n                          </Link>\n                        </td>                                             \n                    </tr>                  \n                  )\n                })}              \n            </tbody>\n          </table>\n        </div>\n      </section>\n      )\n    }\n}\n\nexport default ViewTickets;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddClient extends Component {\n  state = {\n    accountName:\"\",\n    address1:\"\",\n    Phone:\"\",\n    active:false,    \n    isSubmitSuccessful:false\n  }\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });    \n  } \n  toggleChange = () => {\n    this.setState({\n      active: !this.state.active      \n    });   \n  }\n  handleSubmit(event){\n    event.preventDefault();\n    console.log(this.state)\n    axios.post(\n        `${process.env.REACT_APP_API_URL}/clients/addClient`,\n        this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"new client: \", response.data);\n        this.setState({ isSubmitSuccessful: true })\n        this.props.history.push('/client-list')\n    } )\n    .catch( err => console.log(err) );\n  }\n  render(){\n    return(\n      <section className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card rounded-0\">\n            <div className=\"card-header\">\n                <h3 className=\"mb-0 my-2\">Add Account</h3>\n            </div>\n          <div className=\"card-body\">      \n            <form onSubmit={event => this.handleSubmit(event)}>\n              <div className=\"form-group\">\n                <label>Account Name:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.accountName }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"accountName\"\n                    placeholder = \"\"\n                />\n              </div>                       \n              <div className=\"form-group\">\n                <label>Address:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.address1 }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"address1\"\n                    placeholder = \"\"\n                /> \n              </div>            \n              <div className=\"form-group\">\n                <label>Phone:</label>\n                <input \n                    className=\"form-control\"\n                    value = { this.state.Phone }\n                    onChange={ e => this.genericSync(e) }\n                    type = \"text\"\n                    name = \"Phone\"\n                    placeholder = \"\"\n                />  \n              </div>            \n              <div className=\"form-group-row\">\n                <label>Active:</label>\n                <input \n                    className=\"form-control-row ml-2\"\n                    type=\"checkbox\"\n                    name=\"active\"\n                    checked={this.state.active}\n                    onChange={this.toggleChange}\n                />  \n              </div>            \n              <button className=\"btn btn-secondary btn-lg btn-block\">Submit</button> \n            </form>\n            </div>\n        </div>\n      </div>\n    </section>\n    )\n  }\n\n}\n\nexport default AddClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nclass ClientList extends Component {\n    state = {\n      clientArray:[]\n    }    \n\n    componentDidMount() {\n      axios.get(\n        `${process.env.REACT_APP_API_URL}/clients/clientList`,\n        \n      { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n          console.log(\"ClientList\", response.data.data);\n          // update our state array with the data from the API\n          this.setState({ clientArray: response.data.data });\n      })\n      .catch(err => {\n          console.log(\"Phone List ERROR\", err);\n          alert(\"Sorry! Something went wrong.\");\n      });\n    }    \n\n    render(){\n      const { clientArray } = this.state;\n      return(\n        <section className=\"row\">\n         <div className=\"col-md-9 mx-auto\">\n          <h2> Clients </h2>\n              <p>Currently we have: { clientArray.length } clients.</p>\n              <table className=\"table table-sm table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Account Name</th>\n                  <th scope=\"col\">Address</th> \n                  <th scope=\"col\">Phone</th>  \n                  <th scope=\"col\">Active</th>              \n                </tr>\n             </thead>\n            <tbody>              \n                { clientArray.map((oneClient) => {\n                  return(\n                    <tr key={ oneClient._id }>\n                        <td> {oneClient.accountName} </td>\n                        <td> {oneClient.address1} </td>\n                        <td> {oneClient.Phone} </td>                        \n                        <td><Link to={`/edit-client/${oneClient._id}`}>\n                          <button className=\"btn btn-secondary btn-sm\">Edit</button>  \n                          </Link>\n                        </td>                                             \n                    </tr>                  \n                  )\n                })}              \n            </tbody>\n          </table>\n        </div>\n      </section>\n      )\n    }\n}\n\nexport default ClientList;\n\n","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass EditClient extends Component {\n  \n  state = {\n      accountName: \"\",\n      address1: \"\",\n      Phone: \"\",\n      active: false        \n  }  \n\n  //Update state of inputs\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  //Update state of checkbox\n  toggleChange = () => {\n    this.setState({\n      active: !this.state.active      \n    });    \n  }\n\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    //console.log(params.clientId)  \n    axios.get(`${process.env.REACT_APP_API_URL}/clients/clientListEdit/${params.clientId}`)\n    .then(response => {\n      console.log(response.data.data);\n      // update our state array with the data from the API\n      this.setState({ \n                      accountName: response.data.data.accountName,\n                      address1: response.data.data.address1,\n                      Phone:response.data.data.Phone,\n                      active: response.data.data.active\n                    });\n      console.log(this.state)\n    })\n      .catch(err => {\n        //console.log(\"Phone List ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  handleSubmit(event) {    \n    event.preventDefault(); \n    const { match: { params } } = this.props;\n    console.log(\"submit\", this.state)  \n    axios.put(     \n      `${process.env.REACT_APP_API_URL}/clients/updateClient/${params.clientId}`,\n         this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"updated client: \", response.data); \n        this.props.history.push('/client-list');        \n    } )\n    .catch( err => console.log(err) );\n     \n  }\n\n  \n\n  render(){    \n    return(\n      <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card rounded-0\">\n              <div className=\"card-header\">\n                  <h3 className=\"mb-0 my-2\">Edit Client Profile</h3>\n              </div>\n          <div className=\"card-body\">\n            <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label>Account Name:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.accountName }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"accountName\"              \n              />\n            </div>\n                       \n            <div className=\"form-group\">\n              <label>Address:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.address1 }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"address1\"              \n              />\n            </div>\n              \n            <div className=\"form-group\">\n              <label>Phone:</label>\n              <input \n                  className = \"form-control\"\n                  value = { this.state.Phone }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"Phone\"              \n              />\n            </div>\n            \n            <div className=\"form-group-row\">\n              <label>Active:</label>\n              <input \n                  className = \"form-control-row ml-2\"\n                  type=\"checkbox\"\n                  name=\"active\"\n                  checked={this.state.active}\n                  onChange={this.toggleChange}\n              />\n            </div>\n              \n              <button className=\"btn btn-secondary btn-lg btn-block\">Update</button> \n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default EditClient;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nclass UserList extends Component {\n    state = {\n      userArray:[]\n    } \n    componentDidMount() {\n      // retrieve the info from the API as soon as the component loads\n      axios.get(\n        `${process.env.REACT_APP_API_URL}/api/usersList`,\n        // { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n          console.log(\"UserList front = = =\", response.data.data);\n          // update our state array with the data from the API\n          this.setState({ userArray: response.data.data });\n      })\n      .catch(err => {\n          console.log(\"User List ERROR\", err.response);\n          alert(\"Sorry! Something went wrong.\");\n      });\n    }    \n\n    render(){\n      const { userArray } = this.state;\n      return(\n        <section className=\"row\">\n        <div className=\"col-md-9 mx-auto\">\n          <h2> Users </h2>\n            <p>Currently we have: { userArray.length } users.</p>\n            <table className=\"table table-sm table-hover\">\n              <thead>\n              <tr>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">Email Address</th> \n                <th scope=\"col\">Status</th>  \n                <th scope=\"col\">Action</th>              \n              </tr>\n            </thead>\n            <tbody>\n              { userArray.map((oneUser) => {\n                return(\n                  <tr key={ oneUser._id }>\n                      <td>                                \n                        { oneUser.fullName }                                \n                      </td>\n                      <td>                                \n                          { oneUser.email }                                \n                      </td>\n                      <td>\n                        { oneUser.status } \n                      </td>\n                      <td>\n                        <Link to={`/edit-user/${oneUser._id}`}> \n                          <button className=\"btn btn-secondary btn-sm\">Edit</button> \n                        </Link>\n                      </td>\n                  </tr>                  \n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      )\n    }\n}\n\nexport default UserList;","import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass EditUser extends Component {\n  \n  state = {\n      fullName: \"\",\n      email:\"\",\n      status: \"\",\n      role: \"\",             \n  }\n  //Update state of inputs\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    //console.log(params.clientId)  \n    axios.get(`${process.env.REACT_APP_API_URL}/api/profile/${params.userId}`)\n    .then(response => {\n      console.log(\"response\",response.data.data);\n      // update our state array with the data from the API\n      this.setState({ \n                      fullName: response.data.data.fullName,\n                      email: response.data.data.email,\n                      status:response.data.data.status,\n                      role: response.data.data.role\n                    });\n      console.log(this.state)\n    })\n      .catch(err => {        \n        alert(\"Sorry! Something went wrong.\");\n    });\n  }\n  handleSubmit(event) {    \n    event.preventDefault(); \n    const { match: { params } } = this.props;\n    console.log(\"pre-submit\", this.state)  \n    axios.put(     \n        `${process.env.REACT_APP_API_URL}/api/updateUser/${params.userId}`,\n         this.state,\n        { withCredentials: true }\n    )\n    .then( response => {\n        console.log(\"updated user: \", response.data.data);  \n        this.props.history.push('/user-list')      \n    } )\n    .catch( err => console.log(err) );\n     \n  }\n\n  render(){    \n    return(\n      <div className=\"row\">\n      <div className=\"col-md-6 mx-auto\">\n        <div className=\"card rounded-0\">\n            <div className=\"card-header\">\n                <h3 className=\"mb-0 my-2\">Edit User Profile</h3>\n            </div>\n        <div className=\"card-body\">      \n            <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label>User Name:</label>\n              <input \n                  className=\"form-control\"\n                  value = { this.state.fullName }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"fullName\"              \n              />\n            </div>\n                        \n            <div className=\"form-group\">\n              <label>User Email:</label>\n              <input \n                  className=\"form-control\"\n                  value = { this.state.email }\n                  onChange={ e => this.genericSync(e) }\n                  type = \"text\"\n                  name = \"email\"              \n              />\n            </div>\n              \n            <div className=\"form-group\">\n              <label>Role:</label>\n              <select className=\"form-control\" value={ this.state.role } name=\"role\" onChange= { event => this.genericSync(event) } >                  \n                      <option value=\"Admin\"> Admin </option>\n                      <option value=\"Technician\">Technician</option>\n                      <option value=\"Client\"> Client </option> \n              </select> \n            </div>\n\n            <div className=\"form-group\">\n              <label>Status:</label>\n              <select className=\"form-control\" value={ this.state.status } name=\"status\" onChange= { event => this.genericSync(event) } >                  \n                      <option value=\"Pending\">Pending</option>\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Inactive\">Inactive</option> \n              </select>\n            </div>         \n            <button className=\"btn btn-secondary btn-lg btn-block\">Update</button> \n          </form>\n          </div>\n        </div>\n      </div>\n    </div>\n   )\n }\n}\n\nexport default EditUser;","import React, { Component } from 'react';\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nclass Navbar extends Component { \n\n  render(){\n    console.log(\"navbar\", this.props)\n     if (this.props.userRole === \"Client\" || this.props.userRole === \"Technician\" || this.props.userRole === \"\") \n     {\n       return null;\n     }\n    return(\n      <header>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-5 mb-5\">  \n        <img src=\"https://res.cloudinary.com/dzhbvaunu/image/upload/v1557556314/IronTask/IronTask-Logo.png\" width=\"60\" height=\"60\" alt=\"\" />      \n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">            \n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/user-list\">User List </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/client-list\">Client List </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/add-ticket\"> Add Ticket </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/add-client\"> Add Client </NavLink>\n            </li>\n          </ul>  \n          <span>{this.props.userName}</span>             \n          \n          {this.props.currentUser ?\n            (<ul className=\"navbar-nav  justify-content-end\">            \n                <li className=\"nav-item dropdown\">\n                  <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">              \n                      <NavLink className=\"dropdown-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"grey\" }} to=\"#\" onClick={this.props.logUserOut} >Logout</NavLink>                                       \n                  </div>\n                </li>             \n            </ul>) \n           :\n           (<ul className=\"navbar-nav  justify-content-end\">            \n              <li className=\"nav-item dropdown\">\n                <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                <div className=\"dropdown-menu nav-item\" aria-labelledby=\"navbarDropdown\">              \n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/login-page\">Login</NavLink>\n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/signup-page\">Signup</NavLink>                  \n                </div>\n              </li>             \n          </ul>)\n         }          \n       </div>\n      </nav>      \n    </header>\n    )\n  }\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { NavLink} from \"react-router-dom\";\n\nclass NavbarTech extends Component { \n\n  render(){\n    console.log(\"navbar\", this.props)\n     if (this.props.userRole === \"Client\" || this.props.userRole === \"Admin\" || this.props.userRole === \"\") \n     {\n       return null;\n     }\n    return(\n      <header>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-5 mb-5\">  \n        <img src=\"https://res.cloudinary.com/dzhbvaunu/image/upload/v1557556314/IronTask/IronTask-Logo.png\" width=\"60\" height=\"60\" alt=\"\" />      \n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">            \n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/view-ticket\"> View Tickets </NavLink>\n            </li>            \n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/add-ticket\"> Add Ticket </NavLink>\n            </li>           \n          </ul>  \n                          \n          <span>{this.props.userName}</span>\n          {this.props.currentUser ?\n            (<ul className=\"navbar-nav  justify-content-end\">            \n                <li className=\"nav-item dropdown\">\n                  <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">              \n                      <NavLink className=\"dropdown-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"grey\" }} to=\"#\" onClick={this.props.logUserOut} >Logout</NavLink>                                       \n                  </div>\n                </li>             \n            </ul>) \n           :\n           (<ul className=\"navbar-nav  justify-content-end\">            \n              <li className=\"nav-item dropdown\">\n                <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                <div className=\"dropdown-menu nav-item\" aria-labelledby=\"navbarDropdown\">              \n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/login-page\">Login</NavLink>\n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/signup-page\">Signup</NavLink>                  \n                </div>\n              </li>             \n          </ul>)\n         }          \n       </div>\n      </nav>      \n    </header>\n    )\n  }\n}\n\nexport default NavbarTech;","import React, { Component } from 'react';\nimport { NavLink} from \"react-router-dom\";\n\nclass NavbarDefault extends Component { \n\n  render(){\n    console.log(\"navbar\", this.props)\n     \n    return(\n      <header>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-5 mb-5\">  \n        <img src=\"https://res.cloudinary.com/dzhbvaunu/image/upload/v1557556314/IronTask/IronTask-Logo.png\" width=\"60\" height=\"60\" alt=\"\" />      \n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">            \n                  \n          </ul>  \n                         \n          \n          {this.props.currentUser ?\n            (<ul className=\"navbar-nav  justify-content-end\">            \n                <li className=\"nav-item dropdown\">\n                  <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">              \n                      <NavLink className=\"dropdown-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"grey\" }} to=\"#\" onClick={this.props.logUserOut} >Logout</NavLink>                                       \n                  </div>\n                </li>             \n            </ul>) \n           :\n           (<ul className=\"navbar-nav  justify-content-end\">            \n              <li className=\"nav-item dropdown\">\n                <NavLink className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user\"></i> Account</NavLink>\n                <div className=\"dropdown-menu nav-item\" aria-labelledby=\"navbarDropdown\">              \n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/login-page\">Login</NavLink>\n                    <NavLink className=\"dropdown-item nav-link nav-item\" style={{textDecoration:\"none\", backgroundColor:\"white\"}} activeStyle={{ backgroundColor: \"white\" }} to=\"/signup-page\">Signup</NavLink>                  \n                </div>\n              </li>             \n          </ul>)\n         }          \n       </div>\n      </nav>      \n    </header>\n    )\n  }\n\n}\n\nexport default NavbarDefault;","import React from 'react';\nimport { NavLink} from \"react-router-dom\";\n\nconst Footer = () => {\n  return(\n    <footer className=\"page-footer font-small unique-color-dark mt-5\">\n        <div style={{backgroundColor: '#f1f1f2'}}>\n          <div className=\"container\">\n            <div className=\"row py-4 d-flex align-items-center\">\n              <div className=\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\">\n                <h6 className=\"mb-0\">Get connected with us on social networks!</h6>\n              </div>\n              <div className=\"col-md-6 col-lg-7 text-center text-md-right\">\n                <NavLink className=\"fb-ic\" to=\"#\" style={{textDecoration:\"none\", color:\"black\" }}>\n                  <i className=\"fab fa-facebook-f white-text mr-4\"> </i>\n                </NavLink>\n                <NavLink className=\"tw-ic\" to=\"#\" style={{textDecoration:\"none\", color:\"black\" }}>\n                  <i className=\"fab fa-twitter white-text mr-4\"> </i>\n                </NavLink>\n                <NavLink className=\"gplus-ic\" to=\"#\" style={{textDecoration:\"none\", color:\"black\" }}>\n                  <i className=\"fab fa-google-plus-g white-text mr-4\"> </i>\n                </NavLink>\n                <NavLink className=\"li-ic\" to=\"#\" style={{textDecoration:\"none\", color:\"black\" }}>\n                  <i className=\"fab fa-linkedin-in white-text mr-4\"> </i>\n                </NavLink>\n                <NavLink className=\"ins-ic\" to=\"#\" style={{textDecoration:\"none\", color:\"black\" }}>\n                  <i className=\"fab fa-instagram white-text\"> </i>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container text-center text-md-left mt-5\">\n          <div className=\"row mt-3\">\n            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n              <h6 className=\"text-uppercase font-weight-bold\">G-Store</h6>\n              <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: 60}} />\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n            </div>\n            \n            <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4 footer-links\">\n              <h6 className=\"text-uppercase font-weight-bold\">Useful links</h6>\n              <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: 60}} />\n              <p>\n                <NavLink to=\"#!\" style={{textDecoration:\"none\", color:\"black\" }}>Your Account</NavLink>\n              </p>\n              <p>\n                <NavLink to=\"#!\" style={{textDecoration:\"none\", color:\"black\" }}>Latest Release Notes</NavLink>\n              </p>\n              <p>\n                <NavLink to=\"#!\" style={{textDecoration:\"none\", color:\"black\" }}>System Status</NavLink>\n              </p>\n              <p>\n                <NavLink to=\"#!\" style={{textDecoration:\"none\", color:\"black\" }}>Help</NavLink>\n              </p>\n            </div>\n            <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n              <h6 className=\"text-uppercase font-weight-bold\">Contact</h6>\n              <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: 60}} />\n              <p>\n                <i className=\"fas fa-home mr-3\" /> Miami, FL 33025, US</p>\n              <p>\n                <i className=\"fas fa-envelope mr-3\" /> info@irontask.com</p>\n              <p>\n                <i className=\"fas fa-phone mr-3\" /> + 01 305 965 8888</p>\n              <p>\n                <i className=\"fas fa-print mr-3\" /> + 01 305 965 8989</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright text-center py-3 nav-item\">© 2019 Copyright:\n          <NavLink className=\"nav-item\" to=\"https://gstore-ironhack.herokuapp.com/\" style={{textDecoration:\"none\", color:\"black\" }}> IronTask </NavLink>\n        </div>\n    </footer>\n\n  )\n}\n\n  export default Footer;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Switch, NavLink, Route, Redirect, Link } from \"react-router-dom\";\n\nimport { withRouter } from 'react-router-dom'\n\nimport axios from \"axios\";\n\nimport Signup from './components/user-pages/Signup';\nimport Login from './components/user-pages/Login';\nimport Home from './components/Home';\nimport AddTicket from './components/tech-pages/AddTicket'\nimport EditTicket from './components/tech-pages/EditTicket'\nimport ViewTickets from './components/tech-pages/ViewTickets'\nimport AddClient from './components/client-pages/Add-Client'\nimport ClientList from './components/client-pages/Client-List'\nimport EditClient from './components/client-pages/Edit-Client'\nimport UserList from './components/admin-pages/User-List'\nimport EditUser from './components/admin-pages/Edit-User'\nimport Navbar from './components/site-pages/Navbar'\nimport NavbarTech from './components/site-pages/NavbarTech'\nimport NavbarDefault from './components/site-pages/NavbarDefault'\nimport Footer from './components/site-pages/Footer'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentUser: null,\n      role: \"\",\n      name: \"\",\n    }\n  }\n\n  componentDidMount(){\n    axios.get(`${process.env.REACT_APP_API_URL}/api/checkuser`, { withCredentials:true })\n    .then(responseFromBackend => {\n     console.log(\"Check User in APP.JS: \",responseFromBackend.data.userDoc)\n      const { userDoc } = responseFromBackend.data;\n      //console.log(\"userDoc\", userDoc.role)\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => console.log(\" Err while check the user: \", err))\n  }\n\n  // this is the method for updating \"currentUser\"\n  // (must be defined in App.js since it's the owner of \"currentUser\" now)\n  syncCurrentUser(user){\n    this.setState({ currentUser: user }); \n    if (user){  \n      this.setState({ role: user.role})\n      this.setState({ name: user.fullName })\n      console.log(\"usuario\",this.state.role, this.state.name, this.state.currentUser)\n    }    \n  }\n\n  logout() {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/logout`,\n        { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(response => {\n        const { userDoc } = response.data;\n        console.log(\"salio\", userDoc);\n        this.syncCurrentUser(userDoc);\n        console.log(\"salio\", \"success\");\n        //this.props.history.push('/login-page'); \n        \n      })\n      .catch(err => {\n        console.log(\"Logout ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    //const {role} = this.state.currentUser\n   // console.log(role)\n    \n   \n    return (\n      <div className=\"App\">        \n        <div className=\"container\"> \n            {this.state.currentUser ? \n            <div>        \n              <Navbar userRole={this.state.role} onUserChange={ userDoc => this.syncCurrentUser(userDoc) }\n              logUserOut={() => this.logout()} currentUser={this.state.currentUser} userName={this.state.name} />\n              <NavbarTech userRole={this.state.role} onUserChange={ userDoc => this.syncCurrentUser(userDoc) }\n              logUserOut={() => this.logout()} currentUser={this.state.currentUser} userName={this.state.name} />\n            </div>:\n              \n               \n            \n              <NavbarDefault userRole={this.state.role} onUserChange={ userDoc => this.syncCurrentUser(userDoc) }\n              logUserOut={() => this.logout()} currentUser={this.state.currentUser}  />\n            }\n            <Switch>\n              {/* this is example how to normally do the Route: */}\n              {/* <Route path=\"/somePage\" component={ someComponentThatWillRenderWhenUSerClickThisLink }   /> */}\n              <Route exact path=\"/\" component={ Home } />\n                {/* this way we use when we are passing params down to componentDidMount() {\n                  so we can't use component={}, but instead we have to use render ={() => <someComponent/>}\n                }\n                  */}\n              <Route path=\"/signup-page\" render={ () => \n                <Signup currentUser={this.state.currentUser} \n                onUserChange={ userDoc => this.syncCurrentUser(userDoc) }   />\n               }  />\n              \n              <Route path=\"/login-page\" render={ () => \n                <Login currentUser={ this.state.currentUser } userRole={this.state.role}\n                onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n              }  />\n\n              <Route path=\"/add-ticket\" component={ AddTicket }/>\n              <Route path=\"/edit-ticket/:ticketId\" component={ EditTicket }/>\n              <Route path=\"/view-ticket\" component={ ViewTickets }/>\n              <Route path=\"/add-client\" component={ AddClient }/>\n              <Route path=\"/client-list\" component={ ClientList }/>\n              <Route path=\"/edit-client/:clientId\" component={ EditClient }/>\n              <Route path=\"/user-list\" component={ UserList }/>\n              <Route path=\"/edit-user/:userId\" component={ EditUser }/>             \n              \n            </Switch>\n            <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\"; \n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}